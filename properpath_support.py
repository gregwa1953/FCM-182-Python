#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.4
#  in conjunction with Tcl version 8.6
#    May 23, 2022 05:19:21 AM CDT  platform: Linux
# ======================================================
#     properpath_support.py
#  ------------------------------------------------------
# Created for PAGE community
# Written by G.D. Walters
# Copyright (c) 2022 by G.D. Walters
# This source code is released under the MIT License
# ======================================================
# 24 May, 2022 - Removed PIL from dependencies
# ======================================================
import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import tkinter.messagebox as messagebox

import properpath


def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol('WM_DELETE_WINDOW', root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = properpath.Toplevel1(_top1)
    startup()
    root.mainloop()


def startup():
    import os, pathlib
    # from PIL import Image, ImageTk
    abspath1 = os.path.abspath('')
    abspath2 = pathlib.Path().absolute()
    abspath3 = pathlib.Path(__file__).parent.absolute()
    localpath = os.path.dirname(os.path.abspath(__file__))
    # 'cwd' stands for Current Working Directory
    cwd = os.path.abspath(os.getcwd())
    realpath = os.path.dirname(os.path.realpath(__file__))
    print(f'Abspath1: {abspath1}')
    print(f'Abspath2: {abspath2}')
    print(f'Abspath3: {abspath3}')
    print(f'LocalPath: {localpath}')
    print(f'Current Working Directory: {cwd}')
    print(f'Real Path: {realpath}')
    # Load the two labels with the paths
    _w1.LocalPath.set(localpath)
    _w1.ProperPath.set(abspath1)
    # define the image name
    imgname = '/images/icons/document.png'
    # create temporary variables for the graphics so that Python's
    # garbage collection doesn't try to destroy them before they are seen.
    global tmp, tmp2
    # Try to set the first image
    try:
        tmp = tk.PhotoImage(file="." + imgname)
        _w1.Label1.config(image=tmp)
    except:
        print('Could not load image')
        titl = 'ProperPath Demo'
        msg = f'Could not load image from {abspath1}\n(variable abspath1)'
        messagebox.showerror(titl, msg, parent=root, icon=messagebox.ERROR)
    # ppath2 = abspath1 + imgname  # '/images/icons/document.png'
    # print(f'ProperPath2: {ppath2}')
    tmp2 = tk.PhotoImage(file=str(localpath + imgname))
    _w1.Label6.config(image=tmp2)
    _w1.Scrolledtext1.insert(END, f'abspath1: {abspath1}\n')
    _w1.Scrolledtext1.insert(END, f'abspath2: {abspath2}\n')
    _w1.Scrolledtext1.insert(END, f'abspath3: {abspath3}\n')
    _w1.Scrolledtext1.insert(END, f'localpath: {localpath}\n')
    _w1.Scrolledtext1.insert(END, f'cwd (Current Working Directory): {cwd}\n')
    _w1.Scrolledtext1.insert(END, f'realpath: {realpath}\n')


def on_btnExit(*args):
    print('properpath_support.on_btnExit')
    for arg in args:
        print('another arg:', arg)
    sys.stdout.flush()
    sys.exit()


if __name__ == '__main__':
    properpath.start_up()
